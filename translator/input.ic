
#include "atmega168.ih"

$	#include <avr/io.h> 
$	#include <avr/interrupt.h>
$	volatile unsigned long ovf_cnt = 0;
$	unsigned long millis()
$	{
$		unsigned char sreg = SREG;
$		cli();
$		unsigned long ovf = ovf_cnt;
$		unsigned long tcnt = TCNT0;
$		SREG = sreg;
$		
$		//Timer has already overflown, but interrupt has yet to execute
$		if ((TIFR0 & _BV(TOV0)) && (tcnt < 255))
$			ovf++;
$		return (((ovf<<8) + tcnt)*1024)/(F_CPU/1000);
$	}
$	
$	ISR(TIMER0_OVF_vect)
$	{
$		ovf_cnt++;
$	}
$	




/*Blink process*/
process Proc1 : background
{


	state FS_START 
	{	
		DDRB |= (1<<5);
		to state LED_ON;	
	}
	
	state LED_ON 
	{
	
		timeout(500)
		{
			PORTB &= ~(1<<5);
			to state LED_OFF;	
		}
	}
	
	state LED_OFF
	{
		timeout(500)
		{
			PORTB |= (1<<5);
			to state LED_ON;
		}
	}
}

